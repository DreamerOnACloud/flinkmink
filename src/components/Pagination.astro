---
interface Props {
  currentPage: number;
  lastPage: number;
  url: {
    prev?: string;
    next?: string;
  };
}

const { currentPage, lastPage, url } = Astro.props;
---

<nav class="pagination">
  {url.prev
    ? <a href={url.prev}>&larr; Previous</a>
    : <span class="placeholder">&larr; Previous</span>}

  <div class="page-links">
    {Array.from({ length: lastPage }, (_, i) => i + 1).map((num) => (
      <a
        href={`/blog/${num}`}
        class={num === currentPage ? 'active' : ''}
      >
        {num}
      </a>
    ))}
  </div>

  {url.next
    ? <a href={url.next}>Next &rarr;</a>
    : <span class="placeholder">Next &rarr;</span>}
</nav>

<style>
  .pagination {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 2rem;
    width: 100%;
  }

  .page-links {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
    justify-content: center;
    flex-grow: 1;
  }

  .page-links a {
    text-decoration: none;
    color: #555;
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-weight: 500;
    border: 1px solid transparent;
  }

  .page-links a.active {
    color: #1e40af;
    border-bottom: 2px solid #1e40af;
    font-weight: bold;
  }

  .pagination > a {
    text-decoration: none;
    font-weight: bold;
    color: #333;
  }

  .placeholder {
    visibility: hidden;
    font-weight: bold;
    color: #333;
  }
</style>
