---
/* We don't need any server-side fetching here, so the frontmatter can be left empty */
---

<main id="card-container">
  <p>Loading cards...</p> <!-- Placeholder message while the data is being fetched -->
</main>

<script>
  async function fetchNotionData() {
    const notionApiUrl = '/.netlify/functions/fetch-notion';

    try {
      const response = await fetch(notionApiUrl);
      const contentType = response.headers.get('content-type');
      if (contentType && contentType.includes('text/html')) {
        console.error('Received HTML response instead of JSON');
        throw new Error('Server returned an HTML response instead of JSON');
      }

      const localNotionData = await response.json();
      const localCards = localNotionData.results; // Array of objects

      // Populate the card container with the fetched data
      const cardContainer = document.getElementById('card-container');
      // @ts-ignore
      cardContainer.innerHTML = ''; // Clear the loading message

      localCards.forEach((card: any) => {
        const article = document.createElement('article');
        article.classList.add('card');

        article.innerHTML = `
          <img src="${card.properties.ImageSource.rich_text[0]?.plain_text}" class="card__image" />
          <h2 class="card__heading">${card.properties.Title.rich_text[0]?.plain_text}</h2>
          <div class="card__content">
            <p>${card.properties.Description.rich_text[0]?.plain_text}</p>
          </div>
          <a href="#">
            <div class="card__btn">READ POST</div>
          </a>
        `;
      // @ts-ignore
        cardContainer.appendChild(article);
      });
    } catch (error: any) {
      console.error('Error fetching data:', error.message);
      const cardContainer = document.getElementById('card-container');
      // @ts-ignore
      cardContainer.innerHTML = '<p>Failed to load cards. Please try again later.</p>';
    }
  }

  fetchNotionData();
</script>

<style>
  .card {
      flex: 0 1 400px;
      box-shadow: var(--shadow-5);
      padding: var(--size-fluid-3);
      border-radius: var(--radius-4);
      background-color: var(--violet-0);
  }

  .card__heading {
    font-size: larger;
    font-weight: 500;
    min-width: 100%;
    margin-bottom: 8px;
  }

  #card-container {
      display: flex;
      align-items: start;
      flex-wrap: wrap;
      justify-content: center;
      gap: var(--size-fluid-4);
      margin: var(--size-fluid-4);
      max-width: 1200px;
  }

  .card__btn {
      background-color: blueviolet !important;
      color: white;
      padding: 8px;
      border-radius: 8px;
      margin-top: 20px;
      box-shadow: var(--shadow-4);
      transition: all 250ms var(--ease-squish-3);
  }

  .card__btn:is(:hover, :focus) {
      text-decoration: none;
      box-shadow: none;
      transform: scale(.9);
  }
</style>
